{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_directives/has-role.directive.ts","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_services/admin.service.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/admin/admin-panel/admin-panel.component.css","webpack:///./src/app/admin/admin-panel/admin-panel.component.html","webpack:///./src/app/admin/admin-panel/admin-panel.component.ts","webpack:///./src/app/admin/photo-management/photo-management.component.css","webpack:///./src/app/admin/photo-management/photo-management.component.html","webpack:///./src/app/admin/photo-management/photo-management.component.ts","webpack:///./src/app/admin/roles-modal/roles-modal.component.css","webpack:///./src/app/admin/roles-modal/roles-modal.component.html","webpack:///./src/app/admin/roles-modal/roles-modal.component.ts","webpack:///./src/app/admin/user-management/user-management.component.css","webpack:///./src/app/admin/user-management/user-management.component.html","webpack:///./src/app/admin/user-management/user-management.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bootstrap/bootstrap.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthService } from './../_services/auth.service';\nimport { Directive, Input, ViewContainerRef, TemplateRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  isVisible = false;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    // Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    // Add 'implements OnInit' to the class.\n    const userRoles = this.authService.decodedToken.role as Array<string>;\n\n    // if no roles clear the viewContainerRef\n    if (!userRoles) {\n      this.viewContainerRef.clear();\n    }\n\n    if (this.authService.roleMatch(this.appHasRole)) {\n      if (!this.isVisible) {\n        this.isVisible = true;\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.isVisible = false;\n        this.viewContainerRef.clear();\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      const roles = next.firstChild.data['roles'] as Array<string>;\n\n      if (roles) {\n        const match = this.authService.roleMatch(roles);\n        if (match) {\n          return true;\n        } else {\n          this.router.navigate(['members']);\n          this.alertify.error('You are not authorised to access this area');\n        }\n      }\n\n      if (this.authService.loggedIn()) {\n        return true;\n      }\n\n      this.alertify.error('You are not authorized for this request!');\n      this.router.navigate(['/home']);\n      return false;\n  }\n}\n","import { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<MemberEditComponent> {\n  canDeactivate(component: MemberEditComponent) {\n    if (component.editForm.dirty) {\n      return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\n    }\n    return true;\n  }\n}\n","export class Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { User } from '../_models/user';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { UserService } from '../_services/user.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ListsResolver implements Resolve<User[]> {\n  pageNumber = 1;\n  pageSize = 5;\n  likesParam = 'Likers';\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n    return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { catchError } from 'rxjs/operators';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserService } from './../_services/user.service';\nimport { User } from './../_models/user';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class MemberDetailResolver implements Resolve<User> {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    return this.userService.getUser(route.params['id']).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/members']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { catchError, tap } from 'rxjs/operators';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserService } from './../_services/user.service';\nimport { User } from './../_models/user';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\n    return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/members']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { catchError } from 'rxjs/operators';\nimport { AlertifyService } from './../_services/alertify.service';\nimport { UserService } from './../_services/user.service';\nimport { User } from './../_models/user';\nimport { Injectable } from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class MemberListResolver implements Resolve<User[]> {\n  pageNumber = 1;\n  pageSize = 5;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n}\n","import { User } from 'src/app/_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsersWithRoles() {\n    return this.http.get(this.baseUrl + 'admin/usersWithRoles');\n  }\n\n  updateUserRoles(user: User, roles: {}) {\n    return this.http.post(this.baseUrl + 'admin/editRoles/' + user.userName, roles);\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n}\n","import { User } from './../_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl =  environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        if (response) {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('user', JSON.stringify(response.user));\n          this.decodedToken = this.jwtHelper.decodeToken(response.token);\n          this.currentUser = response.user;\n          this.changeMemberPhoto(this.currentUser.photoUrl);\n        }\n      })\n    );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    this.decodedToken = null;\n    this.currentUser = null;\n    this.router.navigate(['/home']);\n  }\n\n  roleMatch(allowedRoles): boolean {\n    let isMatch = false;\n    const userRoles = this.decodedToken.role as Array<string>;\n    allowedRoles.forEach(role => {\n      if (userRoles.includes(role)) {\n        isMatch = true;\n        return;\n      }\n    });\n\n    return isMatch;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.status === 401) {\n            return throwError(error.statusText);\n          }\n\n          const applicationError = error.headers.get('Application-Error');\n          if (applicationError) {\n            console.error(applicationError);\n            return throwError(applicationError);\n          }\n\n          const serverError = error.error;\n          console.log('Server error:', serverError);\n          let modalStateErrors = '';\n          if (serverError && typeof serverError === 'object') {\n            if (serverError.error) {\n              modalStateErrors += serverError.error;\n            }\n\n            if (serverError.errors) {\n              const errors = serverError.errors;\n              for (const key in errors) {\n                if (errors[key]) {\n                  modalStateErrors += errors[key] + '\\n';\n                }\n              }\n            }\n          }\n          return throwError(modalStateErrors || serverError || 'Server Error');\n        }\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true\n};\n","import { PaginatedResult } from './../_models/pagination';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  apiUrl = environment.apiUrl;\n  userApiUrl = this.apiUrl + 'users';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getUsers(page?: number, itemsPerPage?: number, userParams?: any, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', `${page}`);\n      params = params.append('pageSize', `${itemsPerPage}`);\n    }\n\n    if (userParams) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n\n    if (likesParam === 'Likers') {\n      params = params.append('likers', 'true');\n    }\n\n    if (likesParam === 'Likees') {\n      params = params.append('likees', 'true');\n    }\n\n    return this.http.get<User[]>(this.userApiUrl, { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination')) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(userId: number): Observable<User> {\n    return this.http.get<User>(this.userApiUrl + `/${userId}`);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.userApiUrl + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.userApiUrl + '/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.userApiUrl + userId + '/photos/' + id);\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.userApiUrl + '/' + id + '/like/' + recipientId, {});\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <h2>Admin Panel</h2>\\n  <div class=\\\"tab-panel\\\">\\n    <tabset class=\\\"member-tabset\\\">\\n      <tab heading=\\\"User Management\\\" *appHasRole=\\\"['Admin']\\\">\\n        <div class=\\\"container\\\">\\n          <app-user-management></app-user-management>\\n        </div>\\n      </tab>\\n      <tab heading=\\\"Photo Management\\\" *appHasRole=\\\"['Admin', 'Moderator']\\\">\\n        <app-photo-management></app-photo-management>\\n      </tab>\\n    </tabset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  photo-management works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Edit Roles for {{user.userName}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <!-- <ul *ngIf=\\\"list.length\\\">\\n      <li *ngFor=\\\"let item of list\\\">{{item}}</li>\\n    </ul> -->\\n    <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\">\\n      <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\">\\n        <input type=\\\"checkbox\\\"\\n          class=\\\"form-check-input\\\"\\n          value=\\\"{{role.name}}\\\"\\n          [checked]=\\\"role.checked\\\"\\n          (change)=\\\"role.checked = !role.checked\\\"\\n          [disabled]=\\\"role.name === 'Admin' && user.userName === 'Admin'\\\">\\n        <label>{{role.name}}</label>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"updateRoles()\\\" form=\\\"rolesForm\\\">Submit</button>\\n  </div>\\n\"","import { User } from './../../_models/user';\nimport { BsModalRef } from 'ngx-bootstrap';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Output() updateSelectedRoles = new EventEmitter();\n\n  user: User;\n  roles: any[];\n\n  constructor(\n    public bsModalRef: BsModalRef\n  ) { }\n\n  ngOnInit() {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th style=\\\"width: 10%\\\">User Id</th>\\n      <th style=\\\"width: 30%\\\">User Name</th>\\n      <th style=\\\"width: 40%\\\">Active roles</th>\\n      <th style=\\\"width: 20%\\\"></th>\\n    </tr>\\n    <tr *ngFor=\\\"let user of users\\\">\\n      <td>{{user.id}}</td>\\n      <td>{{user.userName}}</td>\\n      <td>{{user.roles}}</td>\\n      <td><button class=\\\"btn btn-info\\\" (click)=\\\"editRolesModal(user)\\\">Edit Roles</button></td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { RolesModalComponent } from '../roles-modal/roles-modal.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: User[];\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private adminService: AdminService,\n    private alertify: AlertifyService,\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe((users: User[]) => {\n      this.users = users;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  editRolesModal(user: User) {\n    const initialState = {\n      user,\n      roles: this.getRolesArray(user)\n    };\n    this.bsModalRef = this.modalService.show(RolesModalComponent, {initialState});\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values) => {\n      const rolesToUpdate = {\n        roleNames: [...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user, rolesToUpdate).subscribe(() => {\n          user.roles = [...rolesToUpdate.roleNames];\n        }, error => {\n          this.alertify.error(error);\n        });\n      }\n    });\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'},\n      {name: 'VIP', value: 'VIP'},\n    ];\n\n    for (let i = 0; i < availableRoles.length; i++) {\n      let isMatch = false;\n      if (userRoles) {\n        for (let j = 0; j < userRoles.length; j++) {\n          if (availableRoles[i].name === userRoles[j]) {\n            isMatch = true;\n            availableRoles[i].checked = true;\n            roles.push(availableRoles[i]);\n            break;\n          }\n        }\n      }\n\n      if (!isMatch) {\n        availableRoles[i].checked = false;\n        roles.push(availableRoles[i]);\n      }\n    }\n    return roles;\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  jwtHelper = new JwtHelperService();\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { appRoutes } from './routes';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { AlertifyService } from './_services/alertify.service';\nimport { SharedModule } from './shared/shared.module';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { TimeAgoPipe } from 'time-ago-pipe';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { AdminService } from './_services/admin.service';\nimport { RolesModalComponent } from './admin/roles-modal/roles-modal.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    RegisterComponent,\n    HomeComponent,\n    ListsComponent,\n    MemberListComponent,\n    MessagesComponent,\n    MemberCardComponent,\n    MemberDetailComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TimeAgoPipe,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    RouterModule.forRoot(appRoutes),\n    FileUploadModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: ['localhost:5000'],\n        blacklistedRoutes: ['localhost:5000/api/auth']\n      }\n    })\n  ],\n  providers: [\n    AuthService,\n    UserService,\n    AdminService,\n    AuthGuard,\n    PreventUnsavedChangesGuard,\n    ErrorInterceptorProvider,\n    AlertifyService,\n    MemberDetailResolver,\n    MemberListResolver,\n    MemberEditResolver,\n    ListsResolver\n  ],\n  entryComponents: [\n    RolesModalComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {\n  BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule, ModalModule\n} from 'ngx-bootstrap';\n\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    TabsModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    ModalModule\n  ],\n  declarations: []\n})\nexport class BootstrapModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lb mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lb\\\">Learn more</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <p *ngFor=\\\"let value of values\\\">\\n    {{value.id}}. {{value.name}}\\n  </p>\\n</div>\\n\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  values: any;\n  registerMode = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    // this.getValuesFrmBckEnd();\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  getValuesFrmBckEnd() {\n    this.http.get('https://localhost:5001/api/values').subscribe(response => {\n      this.values = response;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\n  </div>\\n</div>\\n\\n\\n\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n<pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n  (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\n  >\\n\\n</pagination>\\n</div>\\n\"","import { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.likesParam = 'Likers';\n  }\n\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n}\n","module.exports = \".card:hover img {\\n  -webkit-transform: scale(1.2, 1.2);\\n          transform: scale(1.2, 1.2);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n  opacity: 0.7;\\n}\\n\\n.card img {\\n  -webkit-transform: scale(1.0, 1.0);\\n          transform: scale(1.0, 1.0);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out;\\n}\\n\\n.card-img-wrapper {\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.member-icons {\\n  position: absolute;\\n  bottom: -30%;\\n  left: 0;\\n  right: 0;\\n  margin-right: auto;\\n  margin-left: auto;\\n  opacity: 0;\\n}\\n\\n.card-img-wrapper:hover .member-icons {\\n  bottom: 0;\\n  opacity: 1;\\n}\\n\\n.animate {\\n  transition: all 0.3s ease-in-out;\\n}\\n\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members', user.id]\\\">\\n          <i class=\\\"fa fa-user\\\"></i>\\n        </button>\\n      </li>\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button>\\n      </li>\\n      <li class=\\\"list-inline-item\\\">\\n        <button class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-envelope\\\"></i></button>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\">\\n      <i class=\\\"fa fa-user\\\"></i> {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\\n\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { User } from './../../_models/user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".img-thumbnail {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body {\\n  padding: 0 25px;\\n}\\n\\n.card-footer {\\n  padding: 10px 15px;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img src=\\\"{{user?.photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user?.city}}, {{user?.country}}</p>\\n          </div>\\n          <div>\\n            <strong>Age:</strong>\\n            <p>{{user?.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user?.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member since:</strong>\\n            <p>{{user?.created | date}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100 mr-1\\\">Like</button>\\n            <button class=\\\"btn btn-primary w-100\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"About {{user?.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user?.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user?.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user?.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <p>Messages will go here</p>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { User } from './../../_models/user';\nimport { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private alertify: AlertifyService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      }\n    ];\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        description: this.user.photos[i].description\n      });\n    }\n\n    return imageUrls;\n  }\n}\n","module.exports = \".img-thumbnail {\\n  margin: 25px;\\n  width: 85%;\\n  height: 85%;\\n}\\n\\n.card-body {\\n  padding: 0 25px;\\n}\\n\\n.card-footer {\\n  padding: 10px 15px;\\n  background-color: #fff;\\n  border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <h1>Your Profile</h1>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n          <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <img src=\\\"{{photoUrl || '../../../assets/user.png' }}\\\" alt=\\\"{{user.knownAs}}\\\" class=\\\"card-img-top img-thumbnail\\\">\\n          <div class=\\\"card-body\\\">\\n            <div>\\n              <strong>Location:</strong>\\n              <p>{{user?.city}}, {{user?.country}}</p>\\n            </div>\\n            <div>\\n              <strong>Age:</strong>\\n              <p>{{user?.age}}</p>\\n            </div>\\n            <div>\\n              <strong>Last Active:</strong>\\n              <p>{{user?.lastActive | timeAgo }}</p>\\n            </div>\\n            <div>\\n              <strong>Member since:</strong>\\n              <p>{{user?.created | date }}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n              <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"tab-panel\\\">\\n          <tabset class=\\\"member-tabset\\\">\\n            <tab heading=\\\"Edit Profile\\\">\\n              <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                <h4>Description</h4>\\n                <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"user.introduction\\\">{{user?.introduction}}\\n                </textarea>\\n                <h4>Looking For</h4>\\n                <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"user.lookingFor\\\">{{user?.introduction}}\\n                </textarea>\\n                <h4>Interests</h4>\\n                <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"user.interests\\\">{{user?.introduction}}\\n                </textarea>\\n                <div class=\\\"form-inline\\\">\\n                  <label for=\\\"city\\\">City</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                  <label for=\\\"country\\\">Country</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n                </div>\\n              </form>\\n            </tab>\\n            <tab heading=\\\"Edit Photos\\\">\\n              <app-photo-editor [photos]=\\\"user.photos\\\" (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n            </tab>\\n          </tabset>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { User } from './../../_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n\n  // if user close the browser tab, this will notify user\n  // and will launch confirm dialog box before closing this page\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user)\n    .subscribe(next => {\n      this.alertify.success('Profile updated successfully.');\n      // reset the form\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"minAge\\\">Age From</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\n        [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"maxAge\\\">Age To</label>\\n      <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n        [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"gender\\\">Show: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n        [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\n        <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n          {{gender.display}}\\n        </option>\\n      </select>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\"\\n      (click)=\\\"restFilters()\\\">Reset Filter</button>\\n\\n    <div class=\\\"col\\\">\\n      <div class=\\\"btn-group float-right\\\">\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n        <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n          [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n  <br>\\n\\n  <div class=\\\"row m-4\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\"\\n    [totalItems]=\\\"pagination.totalItems\\\"\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","import { Pagination, PaginatedResult } from './../../_models/pagination';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { UserService } from './../../_services/user.service';\nimport { User } from './../../_models/user';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  userParams: any = {};\n  pagination: Pagination;\n\n  constructor(\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n  }\n\n  restFilters() {\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.loadUsers();\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<User[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n}\n","module.exports = \"img.img-thumbnail {\\n  height: 100px;\\n  min-width: 100px !important;\\n  margin-bottom: 2px;\\n}\\n\\n.nv-file-over {\\n  border: dotter 3px red;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" alt=\\\"\\\" class=\\\"img-thumbnail p-1\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\"\\n        (click)=\\\"setMainPhoto(photo)\\\"\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        [disabled]=\\\"photo.isMain\\\">\\n        Main\\n      </button>\\n      <button type=\\\"button\\\"\\n        class=\\\"btn btn-sm btn-danger\\\"\\n        (click)=\\\"deletePhoto(photo.id)\\\"\\n        [disabled]=\\\"photo.isMain\\\">\\n        <i class=\\\"fa fa-trash-o\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row mt-5\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h3>Add Photos</h3>\\n    <div ng2FileDrop\\n      [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n      (fileOver)=\\\"fileOverBase($event)\\\"\\n      [uploader]=\\\"uploader\\\"\\n      class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n        <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n          Drop Photos here\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    Multiple\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple/>\\n    <br/>\\n\\n    Single <br/>\\n    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\n  </div>\\n\\n  <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" >\\n    <h3>Upload queue</h3>\\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"50%\\\">Name</th>\\n          <th>Size</th>\\n          <th>Progress</th>\\n          <th>Status</th>\\n          <th>Actions</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td><strong>\\n            {{ item?.file?.name.substring(0, 3) }}..{{ item?.file?.name.substring(item?.file?.name.length - 7, item?.file?.name.length) }}</strong></td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          <td *ngIf=\\\"uploader.options.isHTML5\\\">\\n              <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                  <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n              </div>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n              <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\n              <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\n              <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\n          </td>\\n          <td nowrap>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\n              (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\n              <span class=\\\"fa fa-upload\\\"></span> Upload\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\n              (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\n              <span class=\\\"fa fa-ban\\\"></span> Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\n              (click)=\\\"item.remove()\\\">\\n              <span class=\\\"fa fa-trash\\\"></span> Remove\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div>\\n      <div>\\n        Queue progress:\\n        <div class=\\\"progress mb-4\\\">\\n          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n        </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n        (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n        <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n        (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n        <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n        (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n        <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\n      </button>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"","import { UserService } from 'src/app/_services/user.service';\nimport { Photo } from './../../_models/photo';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  apibaseUrl = environment.apiUrl;\n  currentMainPhoto: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.apibaseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n    .subscribe(() => {\n      this.currentMainPhoto = this.photos.filter(p => p.isMain === true)[0];\n      this.currentMainPhoto.isMain = false;\n      photo.isMain = true;\n      this.authService.changeMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n      this.alertify.success('Successfully updated main photo');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n        this.alertify.success('Photo has been deleted');\n      }, error => {\n        this.alertify.error(error);\n      });\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  messages works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\n  cursor: pointer;\\n}\\n\\nimg {\\n  max-height: 50px;\\n  border: 2px solid white;\\n  display: inline;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Dating App</a>\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"loggedIn()\\\">\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n      </li>\\n      <li *appHasRole=\\\"['Admin', 'Moderator']\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\">Disabled</a>\\n      </li>\\n    </ul>\\n\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n      <span class=\\\"mr-1\\\">\\n        <img src=\\\"{{photoUrl || '../../assets/user.png' }}\\\" alt=\\\"\\\">\\n      </span>\\n      <a dropdownToggle class=\\\"dropdown-toggle text-light\\\">\\n        Welcome {{authService.decodedToken?.unique_name}} <span class=\\\"caret\\\"></span>\\n      </a>\\n\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\n          <i class=\\\"fa fa-user mr-2\\\"></i>\\n          Edit Profile\\n        </a>\\n        <div class=\\\"dropdown-divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n          <i class=\\\"fa fa-sign-out mr-2\\\"></i>\\n          Logout\\n        </a>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Username\\\"\\n        aria-label=\\\"Username\\\" name=\\\"username\\\" required [(ngModel)]=\\\"model.username\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" placeholder=\\\"Password\\\"\\n        aria-label=\\\"Password\\\" name=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\">\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n    </form>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(\n    public authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in Successfully.');\n    }, error => {\n      // subscribe error\n      this.alertify.error(error);\n    }, () => {\n      // subscribe complete function\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n    <label class=\\\"radio-inline\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n    </label>\\n    <label class=\\\"radio-inline ml-3\\\">\\n      <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors\\n        && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"username\\\"\\n    placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors\\n      && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"password\\\"\\n    placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('password').hasError('required')\\n        && registerForm.get('password').touched\\\">\\n        Password is required.\\n    </div>\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('password').hasError('minlength')\\n        && registerForm.get('password').touched\\\">\\n        Password must be atleast 4 characters.\\n    </div>\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('password').hasError('maxlength')\\n        && registerForm.get('password').touched\\\">\\n        Password must be less than 8 characters.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\"\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors\\n        && registerForm.get('confirmPassword').touched\\n        || registerForm.get('confirmPassword').touched\\n        && registerForm.hasError('mismatch')}\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"confirmPassword\\\"\\n    placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\n        && registerForm.get('confirmPassword').touched\\\">\\n        Confirm Password is required.\\n    </div>\\n    <div class=\\\"invalid-feedback\\\"\\n      *ngIf=\\\"registerForm.hasError('mismatch')\\n        && registerForm.get('confirmPassword').touched\\\">\\n        Confirm Password must match to Password.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import { User } from './../_models/user';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n\n  user: User;\n  registerForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidtor});\n  }\n\n  passwordMatchValidtor(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful.');\n        }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { Routes, CanActivate } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\n\nexport const appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver} },\n      { path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver} },\n      { path: 'member/edit', component: MemberEditComponent,\n        resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChangesGuard] },\n      { path: 'messages', component: MessagesComponent },\n      { path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}},\n      { path: 'admin', component: AdminPanelComponent, data: {roles: ['Admin', 'Moderator']}}\n    ]\n  },\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BootstrapModule } from '../bootstrap/bootstrap.module';\nimport { NgxGalleryModule } from 'ngx-gallery';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BootstrapModule,\n    NgxGalleryModule,\n  ],\n  exports: [\n    CommonModule,\n    BootstrapModule,\n    NgxGalleryModule,\n  ],\n  declarations: [  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}